blueprint:
  domain: automation
  name: Light switch with configurable brightness for Day/Night
  description: Turns a light on from a switch with configurable brightness depending on Day/Night time.

  input:
    source_relay:
      name: Relay
      description: The relay that provides physical power to the light source.
      selector:
        entity:
          domain: switch
      default: {}

    source_switch:
      name: Switch
      description: The switch that should trigger this automation.
      selector:
        entity:
          domain: binary_sensor

    target_light:
      name: Light
      description: The light source that should be turned on/off.
      selector:
        entity:
          domain:
            - light

    day_brightness:
      name: Brightness at day
      description: The brightness of the light during day time.
      default: 100
      selector:
        number:
          min: 1.0
          max: 100.0
          step: 1.0
          mode: slider

    day_temperature:
      name: Temperature at day
      description: The temperature of the light during day time.
      default: 1
      selector:
        color_temp:

    night_brightness:
      name: Brightness at night
      description: The brightness of the light during night time.
      default: 20
      selector:
        number:
          min: 1.0
          max: 100.0
          step: 1.0
          mode: slider

    night_temperature:
      name: Temperature at night
      description: The temperature of the light during night time.
      default: 1
      selector:
        color_temp:

    night_time_from:
      name: Night time from
      description: Moment in time when night time starts.
      selector:
        time: {}

    night_time_till:
      name: Night time till
      description: Moment in time when night time ends.
      selector:
        time: {}

trigger:
  platform: state
  entity_id: !input source_switch
  from:
    - 'on'
    - 'off'
  to:
    - 'on'
    - 'off'

action:
    # We want to ensure the relay is turned on to provide power to the light
    # For example when in offline/hardware mode and the relay was still turned of
    # Ofcourse only when a relay is defined
  - if:
    - condition: state
      entity_id: !input target_light
      state:
        - 'on'
        - 'off'
    - "{{ source_relay|length > 0 }}"
    then:
      # No need to check if it is off, because Home Assistant does this internally
      - service: switch.turn_on
        target:
          entity_id: !input source_relay

  - choose:
    # When the light is on, simply turn it off
    - conditions:
      - condition: state
        entity_id: !input target_light
        state: 'on'
      sequence:
        - service: light.turn_off
          target:
            entity_id: !input target_light
    # When it is night time, we want to use the night brightness & temperature
    - conditions:
      - condition: state
        entity_id: !input target_light
        state: 'off'
      - condition: time
        after: !input night_time_from
        before: !input night_time_till
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input target_light
          data:
            brightness_pct: !input night_brightness
            color_temp: !input night_temperature
    # When it is day time, we want to use the day brightness & temperature
    - conditions:
      - condition: state
        entity_id: !input target_light
        state: 'off'
      - condition: time
        after: !input night_time_till
        before: !input night_time_from
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input target_light
          data:
            brightness_pct: !input day_brightness
            color_temp: !input day_temperature
    # If the target light is in an unknown state, we fall back to offline/hardware mode and toggle the relay, if one is defined
    - conditions: "{{ source_relay|length > 0 }}"
      sequence:
        - service: switch.toggle
          target:
            entity_id: !input source_relay